함수 선언문 vs 함수 표현식

함수 선언문은 
function sayHello (){
	console.log('Hello')
}

함수 표현식은
let sayHello = function(){
	console.log('Hello')
}

이 둘간의 차이
호출 타이밍에 다르다.

자바스크립트는 위에서 아래로 차래대로 실행된다.
자바스크립트는 인터프리터 언어이다. 자바스크립트는 실행 전 초기화 단계에서
코드의 모든 함수선언문을 찾아 먼저 실행한다. (호이스팅)

반면 함수 표현식은 이와 다르게 순서대로 실행된다.

화살표 함수

화살표 함수는
let sayHello = function(x,y){
	return x+y;
}

를

let sayHello = (x,y) =>{ return x+y; }
로 짧게 줄여줄 수 있다.

리턴문일 경우 중괄호{}를 일반괄호()로도 바꿀 수 있다. return도 생략가능
let sayHello = (x,y) => ( x+y; )

return 전에 다른 코드가 있으면 불가능
let sayHello = (x,y) => { 
	const result = x+y;
	return result;
}

코드가 한줄이면 일반괄호()도 생략가능
let sayHello = (x,y) => x+y 
로 바꿀 수 있다.

인수가 하나면 일반괄호() 생략가능
let sayHello = x => console.log(x+'Hello')


-------------------------------------------
생성자 함수. 생성자 함수는 비슷한 객체를 여러개 만들때 사영
생성자 함수는 첫 글자는 대문자로 한다.
생성자 함수는 붕어빵틀 같은거라 생각하면 된다.

function User(name, age) {
	this.name = name;
	this.age = age;
	this.sayName = function(){
		console.log(this.name);
	}
}

let user1 = new User('Mike',30);
let user2 = new User('Kim',30);
let user3 = new User('HOHO',30);
let user4 = new User('HAHA',30);

user4.sayHello(); // 'HAHA'